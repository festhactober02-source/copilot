class MiniCopilot:
    def __init__(self):
        self.snippets = {
            "factorial": """def factorial(n):\n    return 1 if n==0 else n*factorial(n-1)""",
            "linkedlist": """class Node:\n    def __init__(self, data):\n        self.data=data\n        self.next=None"""
        }
            "linkedlist": """class Node:\n    def __init__(self, data):\n        self.data=data\n        self.next=None"""
            "linkedlist": """class Node:\n    def __init__(self, data):\n        self.data=data\n        self.next=None"""
            "linkedlist": """class Node:\n    def __init__(self, data):\n        self.data=data\n        self.next=None"""

    def suggest(self, query):
        for key in self.snippets:
            if key in query.lower():        self.data = data   # store data
        self.data = data   # store data
        self.data = data   # store data
        self.data = data   # store data
        self.data = data   # store data

                return self.snippets[key]
def insert_at_end(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        return "Sorry, I don't know that yet."
ggest(self, query):
        for key in self.snippe

# Example
bot = MiniCopilot()
print(bot.suggest("Make a factorial function"))
def suggest(self, query):
        for key in self.snippe
def suggest(self, query):
        for key in self.snippets:
            if key in query.lower():
                return self.snippets[key]
        return "Sorry, I don't know thatsert at the end
    def insert_at_end(self, data): yet."

# Example
bot = MiniCopilot()
print(bot.suggest("Make a factorial function"))
def suggest(self, query):
        for key in self.snippe

# Example
bot = MiniCopilot()
print(bot.suggest("Make a factorial function"))
def suggest(self, query):
        for key in self.snippe
def suggest(self, query):
        for key in self.snippets:
            if key in query.lower():
                return self.snippets[key]
        return "Sorry, I don't know that yet."

 def suggest(self, query):
        for key in self.snippets:
            if key in query.lower():
                return self.snippets[key]
